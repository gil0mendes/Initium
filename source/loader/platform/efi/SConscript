#
# The MIT License (MIT)
#
# Copyright (c) 2014 Gil Mendes (gil0mendes)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

vars = ['config', 'defaults', 'env']

Import(*vars)
from util import FeatureSources

sources = FeatureSources(config, [
  'platform.c',
  'efi.c',
  'console.c',
  'memory.c',
])

# Add architecture-specific headers.
env['CPPPATH'] += [Dir('arch/%s/include' % (config['EFI_ARCH']))]

# Get architecture-specific sources.
arch_sources = SConscript(dirs = ['arch/' + config['EFI_ARCH']], exports = vars)
sources = arch_sources + sources

# EFI binaries must be relocatable, so build position independent code.
env['CCFLAGS'] += ['-fpic']
env['ASFLAGS'] += ['-fpic']

# EFI uses UCS-2 strings.
env['CCFLAGS'] += ['-fshort-wchar']

# We build the loader as a relocatable ELF shared library, and then convert
# that into a PE binary for use with EFI.
env['LINKFLAGS'] += [
  '-Wl,-Bsymbolic', '-Wl,-shared', '-Wl,-znocombreloc', '-Wl,--no-undefined'
]

Return('sources')
